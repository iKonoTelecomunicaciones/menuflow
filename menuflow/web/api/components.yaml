components:
  schemas:
    # Base schemas
    BaseResponseDetailMessage:
      type: object
      properties:
        detail:
          type: object
          properties:
            message:
              type: string
    # End of base schemas

    # Schemas
    GetEmailServersOk:
      type: object
      properties:
        email_servers:
          type: array
      example:
        email_servers:
          - example_email_server_1
          - example_email_server_2
          - example_email_server_3

    GetMiddlewaresOk:
      type: object
      properties:
        middlewares:
          type: array
      example:
        middlewares:
          - example_middleware_1
          - example_middleware_2
          - example_middleware_3

    CreateUpdateFlowOk:
      type: object
      properties:
        detail:
          type: object
          properties:
            message:
              type: string
            data:
              type: object
              properties:
                id:
                  type: integer
    CreateUpdateModuleOk:
      type: object
      properties:
        detail:
          type: object
          properties:
            message:
              type: string
            data:
              type: object
              properties:
                module_id:
                  type: integer

    BodyNotJson:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Request body is not JSON.

    FlowIsRequired:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Parameter flow is required.

    GetFlowOk:
      type: object
      properties:
        id:
          type: integer
        flow:
          type: object
      example:
        id: 1
        flow:
          menu:
            flow_variables:
              variable_1: value_1
              variable_2: value_2
            nodes:
              - id: message_1
                type: message
                message: message_1
                o_connection: message_2
    GetAllFlowsOk:
      type: object
      properties:
        flows:
          type: array
          items:
            type: object
            additionalProperties: true
      example:
        flows:
          - id: 1
            flow:
              menu:
                flow_variables:
                  variable_1: value_1
                  variable_2: value_2
                nodes:
                  - id: message_1
                    type: message
                    message: message_1
                    o_connection: message_2
          - id: 2
            flow:
              menu:
                flow_variables:
                  variable_1: value_1
                  variable_2: value_2
                nodes:
                  - id: message_1
                    type: message
                    message: message_1
                    o_connection: message_2

    GetModuleOk:
      type: object
      properties:
        id:
          type: integer
        flow_id:
          type: integer
        name:
          type: string
        nodes:
          type: array
          items:
            type: object
            additionalProperties: true
        position:
          type: object

    GetAllModulesOk:
      type: object
      properties:
        modules:
          type: object
          additionalProperties:
            type: object
            properties:
              id:
                type: integer
              flow_id:
                type: integer
              nodes:
                type: array
                items:
                  type: object
                  additionalProperties: true
              position:
                type: object
                additionalProperties: true
    GetFlowNodesOk:
      type: object
      properties:
        id:
          type: integer
        nodes:
          type: array
          items:
            type: object
            additionalProperties: true
    GetVariablesOk:
      type: object
      properties:
        room:
          type: object
          additionalProperties: true
        route:
          type: object
          additionalProperties: true

    GetFlowByIDNotFound:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Flow with ID 1 not found.

    GetFlowByUserIDNotFound:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Flow with mxid @menubot1:darknet.com not found.

    CreateClientOk:
      type: object
      properties:
        id:
          type: integer
        homeserver:
          type: string
        access_token:
          type: string
        device_id:
          type: string
        autojoin:
          type: boolean
        flow:
          type: integer
      example:
        id: 1
        homeserver: https://matrix.darknet.com
        access_token: sk_lcksahye1ds2a5s6d2c3a5d4verf2
        device_id: DHFGY545
        autojoin: true
        flow: 1

    EventOk:
      type: object
      properties:
        detail:
          type: object
          properties:
            message:
              type: string
              example: "Webhook event received"
            data:
              type: object
              additionalProperties: true
              example:
                id: 123456
                client: Jon Doe

    BadContentType:
      type: object
      properties:
        detail:
          type: object
          properties:
            message:
              type: string
              example: "Unsupported Content-Type"
      example:
        detail:
          message: Event received successfully

    InvalidAccessToken:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Invalid access token.

    InvalidHomeserver:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Invalid homeserver or access token.

    HomeserverConnectionError:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Could not connect to homeserver.

    ClientAlreadyExists:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: There is already a client with the user ID of that token.

    AccessTokenMismatch:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: >
            The Matrix user ID of the client and the user ID of the access token don't
            match. Access token is for user @bot:example.com.

    DeviceIDMismatch:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: >
            The Matrix device ID of the client and the device ID of the access token
            don't match. Access token is for device HDJSK56.

    VariablesSetOk:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Variables set successfully.

    UpdateFlowOk:
      type: object
      properties:
        id:
          type: integer
        homeserver:
          type: string
        access_token:
          type: string
        device_id:
          type: string
        autojoin:
          type: boolean
        flow:
          type: integer
      example:
        id: 1
        homeserver: https://matrix.darknet.com
        access_token: sk_lcksahye1ds2a5s6d2c3a5d4verf2
        device_id: DHFGY545
        autojoin: true
        flow: 1

    ClientNotFound:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Client with given user ID @bot:example.com not found.

    FlowNotFound:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Flow not found.

    FlowReloadedOk:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Flow reloaded successfully.

    ClientEnabledOrDisabledOk:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Client enabled/disabled successfully.

    InvalidAction:
      type: object
      properties:
        detail:
          type: object
      example:
        detail:
          message: Invalid action provided.

    GetAllBackupsOk:
      type: object
      properties:
        count:
          type: integer
        flows:
          type: array
      example:
        count: 2
        flows:
          - id: 1
            flow_id: 1
            flow:
              menu:
                flow_variables:
                  variable_1: value_1
                  variable_2: value_2
                nodes:
                  - id: message_1
                    type: message
                    message: message_1
                    o_connection: message_2
          - id: 2
            flow_id: 1
            flow:
              menu:
                flow_variables:
                  variable_1: value_1
                  variable_2: value_2
                nodes:
                  - id: message_1
                    type: message
                    message: message_1
                    o_connection: message_2

    GetOneBackupOk:
      type: object
      properties:
        id:
          type: integer
        flow_id:
          type: integer
        flow:
          type: object
      example:
        id: 1
        flow_id: 1
        flow:
          menu:
            flow_variables:
              variable_1: value_1
              variable_2: value_2
            nodes:
              - id: message_1
                type: message
                message: message_1
                o_connection: message_2

    CountriesSuccess:
      type: object
      properties:
        countries:
          type: array
        labels:
          type: array
        subdivisions:
          type: array
      example:
        countries:
          - AF
          - CO
          - US
        labels:
          - AF: Afganistán
          - CO: Colombia
          - US: Estados Unidos
        subdivisions:
          - US:
              - CA: California
              - NY: New York

    CheckTemplateOk:
      type: object
      properties:
        rendered:
          type: string
      example:
        rendered: "Hello world!"

    RenderDataOk:
      type: object
      properties:
        rendered:
          type: string
        string_format:
          type: string
        old_render:
          type: string
        equal:
          type: boolean
      example:
        rendered: "Hello world!"
        string_format: "Hello world!"
        old_render: "Hello world!"
        equal: true

    InvalidVariablesFormat:
      allOf:
        - $ref: "#/components/schemas/BaseResponseDetailMessage"
      example:
        detail:
          message: The format of the variables is not valid

    TemplateRequired:
      allOf:
        - $ref: "#/components/schemas/BaseResponseDetailMessage"
      example:
        detail:
          message: Template is required

    # Error schemas
    ErrorReadingData:
      allOf:
        - $ref: "#/components/schemas/BaseResponseDetailMessage"
      example:
        detail:
          message: "Error reading data: 'error_message'"

    ErrorSyntaxTemplate:
      allOf:
        - $ref: "#/components/schemas/BaseResponseDetailMessage"
      example:
        detail:
          message: "Syntax error in template: 'error_message'"

    ErrorGetCountries:
      allOf:
        - $ref: "#/components/schemas/BaseResponseDetailMessage"
      example:
        detail:
          message: "Error getting countries: 'error_message'"
    GetNodeOk:
      type: object
      properties:
        module_name:
          type: string
        node:
          type: object
          additionalProperties: true
      example:
        module_name: "Main"
        node:
          id: "start"
          type: "message"
          o_connection: "message_1"
    # End of error schemas

  # End of schemas

  # Responses
  responses:
    # Generic responses
    InternalServerError:
      description: Server error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponseDetailMessage"
          example:
            detail:
              message: "error_message"
    # End of generic responses

    GetEmailServersSuccess:
      description: Get email servers success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetEmailServersOk"

    GetMiddlewaresSuccess:
      description: Get middlewares success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetMiddlewaresOk"

    CheckTemplateSuccess:
      description: Check template success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CheckTemplateOk"

    CheckTemplateUnprocessable:
      description: Check template unprocessable.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorSyntaxTemplate"

    CheckTemplateBadRequest:
      description: Check template bad request.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/ErrorReadingData"
              - $ref: "#/components/schemas/InvalidVariablesFormat"
              - $ref: "#/components/schemas/TemplateRequired"
          examples:
            ErrorReadingData:
              value:
                detail:
                  message: "Error reading data: 'error_message'"
            InvalidVariablesFormat:
              value:
                detail:
                  message: The format of the variables is not valid
            TemplateRequired:
              value:
                detail:
                  message: Template is required
    RoomIDNotFound:
      description: Room ID not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponseDetailMessage"
          example:
            detail:
              message: Room with ID '!room:example.com' not found.

    RenderDataSuccess:
      description: Render data success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RenderDataOk"


    CreateUpdateFlowSuccess:
      description: Create or update flow success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateUpdateFlowOk"
          examples:
            CreateFlow:
              value:
                detail:
                  message: Flow created successfully.
                  data:
                    flow_id: 1
            UpdateFlow:
              value:
                detail:
                  message: Flow updated successfully.
                  data:
                    flow_id: 1

    CreateUpdateFlowBadRequest:
      description: Create or update flow bad request.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/BodyNotJson"
              - $ref: "#/components/schemas/FlowIsRequired"
          examples:
            BodyNotJson:
              value:
                detail:
                  message: Request body is not JSON.
            FlowIsRequired:
              value:
                detail:
                  message: Parameter flow is required.

    GetFlowSuccess:
      description: Get flow success.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/GetFlowOk"
              - $ref: "#/components/schemas/GetAllFlowsOk"
          examples:
            GetFlow:
              value:
                id: 1
                flow:
                  menu:
                    flow_variables:
                      variable_1: value_1
                      variable_2: value_2
                    nodes:
                      - id: message_1
                        type: message
                        message: message_1
                        o_connection: message_2
            GetAllFlows:
              value:
                flows:
                  - id: 1
                    flow:
                      menu:
                        flow_variables:
                          variable_1: value_1
                          variable_2: value_2
                        nodes:
                          - id: message_1
                            type: message
                            message: message_1
                            o_connection: message_2
                  - id: 2
                    flow:
                      menu:
                        flow_variables:
                          variable_1: value_1
                          variable_2: value_2
                        nodes:
                          - id: message_1
                            type: message
                            message: message_1
                            o_connection: message_2

    GetFlowNotFound:
      description: Get flow not found.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/BaseResponseDetailMessage"
          examples:
            GetFlowByIDNotFound:
              value:
                detail:
                  message: Flow with identifier "1" not found.
            GetFlowByUserIDNotFound:
              value:
                detail:
                  message: Flow with mxid @menubot1:darknet.com not found.

    CreateClientSuccess:
      description: Create client success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateClientOk"

    EventSuccess:
      description: Event successfully received.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EventOk"

    UnsupportedContentType:
      description: Unsupported content type.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadContentType"

    CreateClientBadRequest:
      description: Create client bad request.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/BodyNotJson"
              - $ref: "#/components/schemas/InvalidAccessToken"
              - $ref: "#/components/schemas/InvalidHomeserver"
              - $ref: "#/components/schemas/HomeserverConnectionError"
              - $ref: "#/components/schemas/ClientAlreadyExists"
              - $ref: "#/components/schemas/AccessTokenMismatch"
              - $ref: "#/components/schemas/DeviceIDMismatch"
          examples:
            BodyNotJson:
              value:
                detail:
                  message: Request body is not JSON.
            InvalidAccessToken:
              value:
                detail:
                  message: Invalid access token.
            InvalidHomeserver:
              value:
                detail:
                  message: Invalid homeserver or access token.
            HomeserverConnectionError:
              value:
                detail:
                  message: Could not connect to homeserver.
            ClientAlreadyExists:
              value:
                detail:
                  message: There is already a client with the user ID of that token.
            AccessTokenMismatch:
              value:
                detail:
                  message: >
                    The Matrix user ID of the client and the user ID of the access token don't
                    match. Access token is for user @bot:example.com.
            DeviceIDMismatch:
              value:
                detail:
                  message: >
                    The Matrix device ID of the client and the device ID of the access token
                    don't match. Access token is for device HDJSK56.

    VariablesSetSuccess:
      description: Variables set success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VariablesSetOk"

    ClientFlowUpdated:
      description: Client flow updated.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateFlowOk"

    ClientUpdateFlowBadRequest:
      description: Client update flow bad request.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/BodyNotJson"
              - $ref: "#/components/schemas/FlowIsRequired"
          examples:
            BodyNotJson:
              value:
                detail:
                  message: Request body is not JSON.
            FlowIsRequired:
              value:
                detail:
                  message: Parameter flow is required.

    ClientUpdateFlowNotFound:
      description: Client update flow not found.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/ClientNotFound"
              - $ref: "#/components/schemas/FlowNotFound"
          examples:
            ClientNotFound:
              value:
                detail:
                  message: Client with given user ID @bot:example.com not found.
            FlowNotFound:
              value:
                detail:
                  message: Flow not found.

    ClientFlowReloaded:
      description: Client flow reloaded.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/FlowReloadedOk"

    ClientReloadFlowNotFound:
      description: Client reload flow not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClientNotFound"

    ClientEnabledOrDisabled:
      description: Client enabled or disabled.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClientEnabledOrDisabledOk"

    ClientEnableOrDisableBadRequest:
      description: Client enable or disable bad request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidAction"

    ClientEnableOrDisableNotFound:
      description: Client enable or disable not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClientNotFound"

    GetFlowBackupsSuccess:
      description: Get flow backups success.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/GetAllBackupsOk"
              - $ref: "#/components/schemas/GetOneBackupOk"
          examples:
            GetAllBackups:
              value:
                flows:
                  - id: 1
                    flow_id: 1
                    flow:
                      menu:
                        flow_variables:
                          variable_1: value_1
                          variable_2: value_2
                        nodes:
                          - id: message_1
                            type: message
                            message: message_1
                            o_connection: message_2
                  - id: 2
                    flow_id: 1
                    flow:
                      menu:
                        flow_variables:
                          variable_1: value_1
                          variable_2: value_2
                        nodes:
                          - id: message_1
                            type: message
                            message: message_1
                            o_connection: message_2
            GetOneBackup:
              value:
                id: 1
                flow_id: 1
                flow:
                  menu:
                    flow_variables:
                      variable_1: value_1
                      variable_2: value_2
                    nodes:
                      - id: message_1
                        type: message
                        message: message_1
                        o_connection: message_2

    GetFlowBackupsNotFound:
      description: Get flow backups not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponseDetailMessage"

    GetCountriesSuccess:
      description: Get countries success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CountriesSuccess"

    GetCountriesError:
      description: Get countries error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorGetCountries"
          examples:
            ErrorGetCountries:
              value:
                detail:
                  message: "Error reading data: 'error_message'"

    GetModuleSuccess:
      description: Get Module success.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/GetModuleOk"
              - $ref: "#/components/schemas/GetAllModulesOk"
          examples:
            GetModule:
              value:
                id: 1
                flow_id: 1
                name: "Main"
                nodes:
                  - x: 501.04994916101714
                    y: -627.2362469450213
                    id: "message_hello"
                    name: "message_hello"
                    text: "Hello, world! 😀"
                    type: "message"
                    message_type: "m.text"
                position:
                  x: 632.8705383300783
                  y: 357.11742401123036
                  scale: 0.4092324994498387
            GetAllModules:
              value:
                modules:
                  Main:
                    id: 1
                    flow_id: 1
                    nodes:
                      - x: 501.04994916101714
                        y: -627.2362469450213
                        id: "message_hello"
                        name: "message_hello"
                        text: "Hello, world! 😀"
                        type: "message"
                        message_type: "m.text"
                    position:
                      x: 632.8705383300783
                      y: 357.11742401123036
                      scale: 0.4092324994498387
                  Second:
                    id: 2
                    flow_id: 1
                    nodes:
                      - x: 501.04994916101714
                        y: -627.2362469450213
                        id: "message_hello"
                        name: "message_hello"
                        text: "Hello, world! 😀"
                        type: "message"
                        message_type: "m.text"
                    position:
                      x: 632.8705383300783
                      y: 357.11742401123036
                      scale: 0.4092324994498387

    GetModuleNotFound:
      description: Get module not found.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/BaseResponseDetailMessage"
          examples:
            FlowNotFound:
              value:
                detail:
                  message: Flow with ID 1 not found in the database
            GetModuleByIDNotFound:
              value:
                detail:
                  message: Module with ID 1 not found.
            GetModuleByNameNotFound:
              value:
                detail:
                  message: Module with name 'name' not found.
    GetModuleBadRequest:
      description: Get module bad request.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/BaseResponseDetailMessage"
          example:
            detail:
              message: Invalid or missing flow ID

    CreateModuleSuccess:
      description: Create module success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateUpdateModuleOk"
          example:
            detail:
              message: Module created successfully.
              data:
                module_id: 1
    CreateModuleNotFound:
      description: Post module not found.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/BaseResponseDetailMessage"
          example:
            detail:
              message: Flow with ID 1 not found in the database
    CreateModuleBadRequest:
      description: Create module bad request.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/BaseResponseDetailMessage"
          examples:
            BodyNotJson:
              value:
                detail:
                  message: Request body is not JSON.
            InvalidFlowID:
              value:
                detail:
                  message: Invalid or missing flow ID
            ParameterRequired:
              value:
                detail:
                  message: Parameter 'name' is required.
            ModuleAlreadyExists:
              value:
                detail:
                  message: Module with name 'name' already exists in flow_id 1.

    UpdateModuleSuccess:
      description: Update module success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateUpdateModuleOk"
          example:
            detail:
              message: Module created successfully.
              data:
                module_id: 1

    UpdateModuleBadRequest:
      description: Update module bad request.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/BaseResponseDetailMessage"
          examples:
            BodyNotJson:
              value:
                detail:
                  message: Request body is not JSON.
            InvalidType:
              value:
                detail:
                  message: Flow ID and module ID must be valid integers
            EmptyBody:
              value:
                detail:
                  message: At least one of the parameters name, nodes or position is required
            ModuleNameAlreadyExists:
              value:
                detail:
                  message: Module with name 'module_name' already exists in flow_id 1

    UpdateModuleNotFound:
      description: Module not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponseDetailMessage"
          examples:
            FlowNotFound:
              value:
                detail:
                  message: Flow with ID 1 not found in the database
            ModuleNotFound:
              value:
                detail:
                  message: Module with ID '1' not found in flow_id '1'

    DeleteModuleSuccess:
      description: Delete module success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateUpdateModuleOk"
          example:
            detail:
              message: Module deleted successfully.
              data:
                module_id: 1
    DeleteModuleBadRequest:
      description: Delete module bad request.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/BaseResponseDetailMessage"
          example:
            detail:
              message: Flow ID and module ID must be valid integers
    DeleteModuleNotFound:
      description: Delete module not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponseDetailMessage"
          examples:
            FlowNotFound:
              value:
                detail:
                  message: Flow with ID 1 not found in the database
            ModuleNotFound:
              value:
                detail:
                  message: Module with ID 1 not found in flow_id 1

    GetFlowNodesSuccess:
      description: Get flow nodes by ID or client MXID.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/GetFlowNodesOk"
          example:
                id: 1
                nodes:
                  - id: start
                    type: message
                    name: start
                  - id: message_1
                    type: message
                    name: message_1
    GetVariablesSuccess:
      description: Get variables success.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/GetVariablesOk"
          example:
            room:
              customer_room_id: "!KbOvLyPkXlKnJojGfS:darknet"
              bot_mxid: "@menubot1:darknet"
              customer_mxid: "@acd1:darknet"
            route:
              customer_room_id: "!KbOvLyPkXlKnJojGfS:darknet"
              bot_mxid: "@menubot1:darknet"
              puppet_mxid: "@acd1:darknet"
    GetVariablesNotFound:
      description: Get variables not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponseDetailMessage"
          examples:
            CurrentBotMxidNotFound:
              value:
                detail:
                  message: current_bot_mxid not found in the room variables
            ClientNotFound:
              value:
                detail:
                  message: Client '@bot_mxid:company' not found in room
            RoomNotFound:
              value:
                detail:
                  message: room_id '1' not found
            ScopesNotFound:
              value:
                detail:
                  message: Scopes not found

    GetListModulesSuccess:
      description: Get list modules success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetAllModulesOk"
          example:
            modules:
              - id: 1
                name: Main
              - id: 2
                name: Second
    GetListModulesNotFound:
      description: Get list modules not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponseDetailMessage"
          example:
            detail:
              message: Flow with identifier "1" not found.

    GetNodeSuccess:
      description: Get node success.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetNodeOk"
    GetNodeBadRequest:
      description: Get node bad request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponseDetailMessage"
          example:
            detail:
              message: Invalid or missing flow ID
    GetNodeNotFound:
      description: Get node not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponseDetailMessage"
          example:
            detail:
              message: Node with ID 'start' not found in the database
  # End of responses
